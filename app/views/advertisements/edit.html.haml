.hero.d-flex.align-items-center.justify-content-center
  %h1.text-center.text-white.display-3 New Advertisement

= form_for @advertisement do |f|
  .form-row.mt-5
    .col-md-6
      .form-group
        = f.label :Title
        = f.text_field :title, class: "form-control"
    .col-md-6
      .form-group
        = f.label :category
        = f.select :category_id, options_from_collection_for_select(Category.all, :id, :name), { }, class: "form-control"
  %div.form-row
    .col
      .form-group
        = f.label :description
        = f.text_area :description, class: "form-control", rows: 10
    .col
      .form-group
        = f.label :price, maxlength: 15
        = f.number_field :price, class: "form-control"
      .form-group
        = f.label :"Main image"
        %br
        = image_tag @advertisement.main_image.url(:small), style: "width: 100px;"
        = f.file_field :main_image, class: "form-control"
      .form-group
        = f.label :promoted, class: "u-non-selectable"
        = f.check_box :promoted
      .form-group.hidden
        = f.label :published, class: "u-non-selectable"
        = f.check_box :published

  = f.submit "Update", class: "btn btn-primary btn-lg mb-5", id: "update"
  = link_to "Preview", preview_advertisement_path(@advertisement), class: "btn btn-primary btn-lg mb-5", id: "preview"

:javascript
  var jQElem = {
    form: $("#new_advertisement"),
    save: $("#save"),
    publish: $("#publish"),
    published: $("#advertisement_published"),
    title: $("#advertisement_title"),
    description: $("#advertisement_description"),
    category: $("#advertisement_category"),
    price: $("#advertisement_price"),
    main_image: $("#advertisement_main_image")
  };

  var validateFields = function() {
    var successfulValidation = true
    if( !jQElem.title.val() ) {
      toastr['warning']("You have to provide a title");
      jQElem.title.css("border", "1px solid red");
      jQElem.title.prop("placeholder", "Provide a title");
      successfulValidation = false
    }
    if( !jQElem.description.val() ) {
      toastr['warning']("You have to provide a description");
      jQElem.description.css("border", "1px solid red");
      jQElem.description.prop("placeholder", "Provide a description");
      successfulValidation = false
    }

    if( !jQElem.price.val() ) {
      toastr['warning']("You have to provide a price");
      jQElem.price.css("border", "1px solid red");
      jQElem.price.prop("placeholder", "Provide a price");
      successfulValidation = false
    }

    return successfulValidation;
  };

  var clickEvents = function() {
    jQElem.save.click(function(e) {
      e.preventDefault();
      if(validateFields() === true) {
        jQElem.form.trigger('submit');
      };
    });

    jQElem.publish.click(function(e) {
      e.preventDefault();
      jQElem.published.prop("checked", true);
      jQElem.save.click();
    });
  };

  var init = function() {
    clickEvents();
  };

  init();
